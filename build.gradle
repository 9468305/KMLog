buildscript {
    repositories {
        google()
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.3.2'
    }
}

plugins {
    id 'kotlin-multiplatform' version '1.3.30'
}

repositories {
    google()
    jcenter()
    mavenCentral()
}

group 'com.example'
version '0.0.1'

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'maven-publish'

android {
    compileSdkVersion 28
    defaultConfig {
        //applicationId 'org.jetbrains.kotlin.mpp_app_android'
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName '1.0'
        //testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
    }
    buildTypes {
        release {
            minifyEnabled false
        }
    }
    sourceSets {
        main {
            manifest.srcFile 'src/main/AndroidManifest.xml'
        }
    }
}

dependencies {
    //implementation fileTree(dir: 'libs', include: ['*.jar'])
    //implementation 'com.android.support:appcompat-v7:28.0.0'
    //implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    //androidTestImplementation 'com.android.support.test:runner:1.0.2'

    testImplementation 'androidx.test:core:1.1.0'
    testImplementation "androidx.test.ext:junit:1.1.0"
    testImplementation "androidx.test:runner:1.1.1"
    testImplementation "androidx.test:rules:1.1.1"
    //androidTestImplementation "androidx.test.uiautomator:uiautomator:2.2.0"
    testImplementation "androidx.annotation:annotation:1.0.2"
    //testImplementation 'org.jetbrains.kotlin:kotlin-stdlib:1.3.30'//KotlinCompilerVersion.VERSION)
    //testImplementation 'org.jetbrains.kotlin:kotlin-test:1.3.30'
    //androidTestImplementation kotlin("test")
}

kotlin {
    jvm()
    android("android")
    // This is for iPhone emulator
    // Switch here to iosArm64 (or iosArm32) to build library for iPhone device
    iosX64("ios") {
        binaries {
            framework()
        }
    }
    sourceSets {
        commonMain {
            dependencies {
                implementation kotlin('stdlib-common')
            }
        }
        commonTest {
            dependencies {
                implementation kotlin('test-common')
                implementation kotlin('test-annotations-common')
            }
        }
        jvmMain {
            dependencies {
                implementation kotlin('stdlib')
            }
        }
        jvmTest {
            dependencies {
                implementation kotlin('test')
                implementation kotlin('test-junit')
            }
        }
        iosMain {
        }
        iosTest {
        }
        androidMain {
            dependencies {
                implementation kotlin('stdlib')
            }
        }
        androidTest {
            dependencies {
                implementation kotlin('test')
                implementation kotlin('test-junit')
            }
        }
    }
}

task iosTest {
    def device = project.findProperty("iosDevice")?.toString() ?: "iPhone 8"
    dependsOn kotlin.targets.ios.binaries.getExecutable('test', 'DEBUG').linkTaskName
    group = JavaBasePlugin.VERIFICATION_GROUP
    description = "Runs tests for target 'ios' on an iOS simulator"

    doLast {
        def binary = kotlin.targets.ios.binaries.getExecutable('test', 'DEBUG').outputFile
        exec {
            commandLine 'xcrun', 'simctl', 'spawn', device, binary.absolutePath
        }
    }
}

configurations {
    compileClasspath
}
